The "TableFilters" component outputs an array of <label><input/></labe> checkbox controls that enable the user to select and deselect columns and rows in displayed tables. The input label names and the number of inputs are determined by the "filterOptions" prop passed in to the component. The "TableFilters" component is used to generate input controls (filters) correpsonding to tables being displayed. Clicking on a filter updates the "filteredData" variable, which determines the format/layout of the displayed tables. Clicking a filter also changes the className of that inputs parent node (<label>), which is then picked up by CSS to visually represent the changed status of that filter. The "onChange" event handler "displayFilters()" updates the state of "filteredData" via  the "useState()" React hook and "setFilteredData()". The user has the option of deselecting/selecting all corresponding filters, or selecting/deselecting a single filter. The logic applied in "displayFilters()" determines which option the user has chosen and updates the relevant classNames and the "filteredData" variable accordingly. Updating the "filteredData" variable differs if the input control selected is associated as a 'categories shown' filter or 'days shown' filter, and so additional logic is also applied to complete these operations. This logic has been seperated into "selectCategory()" and "selectedDays" unit functions. 

The first set of unit tests for "TableFilters" involves passing in the "filterOptions" prop and testing that this results in the expected correpsonding output, with the <label>'s text contents matching the items "filterOptions" and the number of controls matching the length of "filterOptions". The second set of unit tests involves testing the logic in "displayFilters()", with "onChange" filter events matching changes in <label> class names and the relevant changes to "filteredData", such that 'deselect all' or 'deselect single' filters are handled correctly with the corresponding filters being changed to/from 'deselected' (false) to 'selected' (true). If the filter is associated with a 'category' then the relevant update should occur in "setFilteredCategories" and will be tested accordingly, alternatively is the filter is associated with a 'day' then the update should occur in "setDaysIncluded".  