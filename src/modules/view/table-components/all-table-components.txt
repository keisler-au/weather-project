The "all-table-components" module contains three React components used to generate the display tables; "DayHeaders", "CreateRows", and "Tables". 
"DayHeaders" returns a row of <th> nodes. The number of nodes corresponds to the number of integers in the "daysIncluded" array. The text content for each node corresponds to the "Date" attribute in "data". If there is no data in "Date", then the text content becomes 'Day x', with x being the currently iterated integer in "daysIncluded". This component is called inside <Tables>, and is only expected for the table titled "8 Day Forecast" as it is the only table with more than two columns. 
"CreateRows" accepts a "tableContent" prop that it maps through, with the iterated information determining what rows get added 'classNames' and how many <td> nodes to generate. If the 'data' inside "tableContent" is an array, then a <td> node is generated for each item in the array, otherwise if 'data' is not an array then a single <td> node is generated. 
"Tables" is a component that returns an array of three <table> nodes, by using the "DayHeaders" and "CreateRows" components. Each table has an associated input control (checkbox) with an 'onChange' event handler that changes the icon of the <label> node and hides the table when it is checked. 

The "day-headers" test file has three tests. 
For the "DayHeaders" component it is expected that the number of generated <th> nodes corresponds to the number of integers in "daysIncluded". The text content of each <th> node is also expected to correspond to the "daysIncluded" integers, such as 'Day (integer +1)' if the "Date" attribute in the "data.daily" object is empty. Otherwise, the <th> node is expected to display the value stored in the "Date" attribute.
"CreateRows" is expected to return either multiple or a single <td> node depending on the amount of data points stored in 'data' in the "tableContent" prop. It is also expected that rows containing a text content of 'Date' or 'Time' are assigned the className of 'time-row'.
The "Tables" component is expected to render three <label> and <table> nodes with respective child nodes corresponding to "data.location" and the "filteredData" variables. A mocked 'click' event is expected to change the text content of the <label> node and the class name of the <table> node.
